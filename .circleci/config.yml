version: 2.1
orbs:
  nix: eld/nix@1.1.0

executors:
  x86_64-linux:
    resource_class: large
    machine:
      image: ubuntu-2204:current
  aarch64-linux:
    resource_class: arm.large
    machine:
      image: ubuntu-2204:current
  x86_64-darwin:
    resource_class: macos.x86.medium.gen2
    macos:
      xcode: 14.2.0
  aarch64-darwin:
    resource_class: macos.m1.large.gen1
    macos:
      xcode: 14.2.0

workflows:
  build-flake:
    jobs:
      - check-flake:
          context:
            - nix
          matrix:
            parameters:
              os: [x86_64-darwin
                  , aarch64-darwin
                  , x86_64-linux
                  # I don't use aarch64-linux right now, so no use turning this on, for now
                  # , aarch64-linux
                  ]

jobs:
  check-flake:
    parameters:
      os:
        type: executor
        default: aarch64-darwin
        description: "Which system to run the flake check against"
    executor: << parameters.os >>
    environment:
      CACHIX_USER: eld
    steps:
      - checkout
      - nix/install:
          extra-conf: |
            auto-optimise-store = false
      - nix/install-cachix
      - nix/with-cachix:
          cachix-user: eld
          nix-command: nix flake check -j auto -v --show-trace --accept-flake-config --fallback

      # - run:
      #     name: Install Nix
      #     command: |
      #       curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install --no-confirm
      #       echo 'export PATH=/nix/var/nix/profiles/per-user/"$USER"/profile/bin:/nix/var/nix/profiles/default/bin:"$PATH"' >> "$BASH_ENV"
      #     environment:
      #       NIX_INSTALLER_EXTRA_CONF: |
      #         trusted-users = root circleci distiller
      #         auto-optimise-store = false
      # - run:
      #     name: Install Cachix and Use Binary Cache
      #     command: |
      #       nix profile install github:nixos/nixpkgs/nixos-22.11#cachix && cachix use $CACHIX_USER
      # - run:
      #     name: Flake check
      #     command: cachix watch-exec $CACHIX_USER -- nix flake check -j auto -v --show-trace --accept-flake-config --fallback
      #     no_output_timeout: 20m

# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  inputs,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    inputs.lanzaboote.nixosModules.lanzaboote
  ];

  # Boot options
  boot = {
    # Lanzaboote for PKI signing/SecureBoot
    lanzaboote = {
      enable = true;
      pkiBundle = "/etc/secureboot";
    };

    # Disable systemd-boot because Lanzaboote deals with this for us
    loader = {
      systemd-boot.enable = lib.mkForce false;

      efi = {
        canTouchEfiVariables = true;
        efiSysMountPoint = "/boot/efi";
      };
    };

    # initrd.secrets doesn't work with Secure Boot at present
    # initrd.secrets = {
    #   "/crypto_keyfile.bin" = /mnt/crypto_keyfile.bin;
    # };

    initrd.availableKernelModules = ["xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod"];
    initrd.kernelModules = ["dm_snapshot"];
    kernelModules = ["kvm-intel"];
    kernelParams = ["acpi_osi=linux" "module_blacklist=hid_sensor_hub"];
    extraModulePackages = [];
    kernelPackages = pkgs.linuxPackages_6_1;

    readOnlyNixStore = true;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b0e66f50-0fc1-4345-8a95-5ffcb0d903d5";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-98b8bb07-c23c-413b-ae08-51d86fe2d645".device = "/dev/disk/by-uuid/98b8bb07-c23c-413b-ae08-51d86fe2d645";

  # Enable swap on luks
  boot.initrd.luks.devices."luks-ccdab096-edfd-4f41-84a0-247f02c4979d".device = "/dev/disk/by-uuid/ccdab096-edfd-4f41-84a0-247f02c4979d";
  # boot.initrd.luks.devices."luks-ccdab096-edfd-4f41-84a0-247f02c4979d".keyFile = "/crypto_keyfile.bin";
  boot.initrd.luks.reusePassphrases = true;

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/5495-95AC";
    fsType = "vfat";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/79745d34-ac66-45e7-bab1-7d6d04cf0603";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp166s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
